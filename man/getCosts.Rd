% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions.R
\name{getCosts}
\alias{getCosts}
\title{Get cost of travel}
\usage{
getCosts(
  world,
  from,
  to = NULL,
  id = "ID",
  z_fix = NULL,
  x = "x",
  y = "y",
  destination = "pairs",
  region = NULL,
  costs = "all",
  direction = "both",
  output = "object",
  dir = tempdir()
)
}
\arguments{
\item{world}{The data.table output of the \link[lbmech]{calculateCosts} function.}

\item{from}{One of data.frame, data.table, SpatialPointsDataFrame, or
SpatialPolygonsDataFrame representing the origin locations. If \code{to = NULL}
and \code{destination = 'pairs'}, this will also be used as the \code{to} parameter.
If object is of class SpatialPolygonsDataFrame, the location will be taken at the
centroid.}

\item{to}{One of data.frame, data.table, SpatialPointsDataFrame, or
SpatialPolygonsDataFrame representing the origin locations. Optional if
\code{destination =  'pairs'}, ignored if \code{destionation =  'all'}.}

\item{id}{Character string representing the column containing the unique
IDs for for each location in the \code{from} (and \code{to}) objects.}

\item{z_fix}{A RasterLayer with the same origin and resolution as the
\code{z_fix} used to generate the 'world' with \link[lbmech]{makeWorld}.}

\item{x}{A character vector representing the column containing the 'x' coordinates.
Required if \code{data} is not Spatial*.}

\item{y}{A character vector representing the column containing the 'y' coordinates.
Required if \code{data} is not Spatial*.}

\item{destination}{One of \code{'pairs'} or \code{'all'}. If \code{'pairs'},
a distance matrix will be generated between every pair of locations in
\code{from}, or every pair of locations between \code{from} and \code{to}.
If \code{'all'}, rasters will be generated for each node representing the cost
to travel to every cell in the given \code{world}.}

\item{region}{An object of class RasterLayer or SpatialPolygons*
representing the total area where movement is possible. Optional; used
to constrain the \code{world} more than it may already have been.}

\item{costs}{A character vector containing any combination of the strings
\code{c("time","work","energy")}. This selects which types of costs will be calculated.
\code{costs = 'all'} is shorthand for \code{costs = c("time","work","energy")}
while \code{costs = 'energetics'} is shorthand for \code{c("work","energy")}.
Default is \code{'all'}.}

\item{direction}{A character vector containing one or both of \code{c("in","out")}
or the singular string 'both'. This determines whether costs to or from the nodes
are calculated. Ignored for \code{destination = 'pairs'}.}

\item{output}{A character vector containing one or both of \code{c("object","file")}.
If \code{"object"} is included, then a list of RasterStacks will be returned.
If \code{"file"} is included, then the appropriate cost rasters will be saved
to the workspace directory \code{dir}.}

\item{dir}{A filepath to the directory being used as the workspace.
Default is \code{tempdir()} but unless the analyses will only be performed a few
times it is highly recommended to define a permanent workspace.}
}
\value{
A list, with entries for each combination of selected \code{costs}
and \code{directions}. The object class of the list entries depends on the
\code{destination} and \code{output} parameters:

(1) If \code{destination = 'pairs'}, entries are distance matrices.
(2) If \code{destination = 'all'} and \code{'object' \%in\% output},
entries are RasterStacks with each RasterLayer representing the cost to/from
each node.
(3) If \code{destination = 'all'} and \code{output == 'file'}, no list is output.

Moreover, if \code{file \%in\% output}, then the cost rasters are saved in the
workspace directory.
}
\description{
A function that calculates the cost to travel between two sets of points.
This can be between two circumscribed sets of points, or one circumscribed one
('nodes') and all other points on the landscape.
}
\details{
There are four possible workflows:

(1) If you simply desire the distance between two sets of points, provide
entries for \code{from} and \code{to} (or just \code{from} if the interest is
in all distances between locations in that object). Output is a distance matrix.
The computational time for this operation is comparable to generating a raster
for the distance to \emph{all} cells in the world (unless all of the locations
in the object are close to each other). So unless the operation is to be done
multiple times, it is highly recommended to generate the rasters as below and extract
values

(2) If you wish to generate a RasterStack of costs from and/or to all nodes
in the \code{from} object, set the \code{output == 'object'}.

(3) You may also save the rasters as a series of \code{.tif} files in the same workspace
directory as the transition \code{.gz} tensor files and the cropped/downloaded
DEMs. This allows us to use \code{getCosts} within a loop for large numbers of origin
nodes without running into random access memory limitations. Do this by
setting \code{output == 'file'}.

(4) You may perform (2) and (3) simultaneously by setting
\code{output == c('file','object')}.
}
