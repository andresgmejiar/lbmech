% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/approxMap.R
\name{approxMap}
\alias{approxMap}
\title{Create an approximate mapping function}
\usage{
approxMap(
  dt,
  id.val,
  x = "x",
  y = "y",
  id.col = "ID",
  rand.val = NULL,
  rand.range = c(0, 1),
  FUN = stats::approxfun,
  ...
)
}
\arguments{
\item{dt}{A data.table containing the observed data}

\item{id.val}{The value to look up in \code{dt[[id.col]]}. When used in a data.table \code{target}'s
\code{j} slot, this would be the name of the column shared between \code{dt} and \code{target} without
quotes.}

\item{x}{A character string representing the name of the independent variable 
column in \code{dt}. Default is \code{x = 'x'}.}

\item{y}{A character string representing the name of the dependent variable 
column in \code{dt}. Default is \code{y = 'y'}.}

\item{id.col}{A character string representing the name of the group column in
\code{dt}. Default is \code{id.col = 'ID'}}

\item{rand.val}{A character vector with values present in \code{dt[[id.col]]}
for which to return a random value. Used for psuedo-observations where the 
outcome is known regardless of the value of the predicted variable.}

\item{rand.range}{A vector of two numbers repretenting t he range of
potential values for \code{rand.range}. Default is \code{rand.range = c(0,1)}.}

\item{FUN}{The approximation function. Default is \code{\link[stats]{approxfun}},
but any function that accepts a two-column data.frame is acceptable.}

\item{...}{Additional parameters to pass to \code{FUN}.}
}
\description{
Define a function that generates an approximation function for a given 
subset of data. This is designed to be used to predict values in one data.table
using values in another via the j slot. See examples.
}
\examples{
# Generate a data.table with different observations for different categories
data <- data.table(ID = rep(c("A","B","C"), each = 10), 
                   x  = runif(30),
                   y  = runif(30, min = 10, max = 20))

# Create a target data.table
target <- data.table(ID = rep(c("A","B","C"), each = 101),
                     x = rep(seq(0,1,length.out=101), each = 3))

target[, y := approxMap(data, id.val = ID, rule = 2, na.rm=TRUE)(x),by='ID']
}
