% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importMap.R
\name{importMap}
\alias{importMap}
\title{Import a contiguous raster map}
\usage{
importMap(
  region,
  polys,
  tile_id = "TILEID",
  z_fix = NULL,
  neighbor_distance = 5,
  FUN = NULL,
  mask = FALSE,
  vals = "location",
  filt = 0,
  z_min = NULL,
  dir = tempdir(),
  ...
)
}
\arguments{
\item{region}{A SpatRaster, Raster*, SpatVector, Spatial* or character
string representing the area of interest}

\item{polys}{A polygon of class SpatVector representing the partitioning grid
for the maximum possible area, in the same format as the output of the 
\code{\link[lbmech]{makeGrid}} function.}

\item{tile_id}{A character string representing the name of the column in the 
\code{polys} polygon pontaining the unique Tile IDs. Default is 
\code{tile_id = 'TILEID'}}

\item{z_fix}{A SpatRaster or Raster* object with the desired output projection, 
resolution, and origin. Required if \code{tiles} is of classes SpatVector,
Spatial*, or character, unless \code{res} is provided.}

\item{neighbor_distance}{An integer representing the number of cells that 
tiles are buffered. In other words, to ensure that there are no gaps between tiles,
neighboring tiles within \code{neighborhood_distance} cells are also considered as
potential sources. Default is 5 cells.}

\item{FUN}{Function to deal with overlapping values for overlapping tiles.
Default is \code{NA}, which uses \code{\link[terra]{merge}}. To use 
\code{\link[terra]{mosaic}}, provide a compatible function}

\item{mask}{If \code{FALSE} (the default), the output map will contain all cells
falling within the extent of \code{region}. If \code{TRUE}, places with \code{NA}
(if \code{region} is SpatRaster or Raster*) or no coverage (if \code{region} is
SpatVector or Spatial*) will be assigned a value of NA.}

\item{vals}{A character string or a Raster* object. Required only if the
\code{z} parameter is a polygon NOT the output of the 
\code{\link[lbmech]{makeGrid}} function as the default is
the character string \code{'location'}. If not, the \code{vals} parameter should be
set to the column name containing the URL or file path to the DEM for that
sector.}

\item{filt}{Numeric. Size of moving window to apply a low-pass filter. Default 
is \code{filt = 0}. Ignored unless the tiles need to be generated from
the raw source files.}

\item{z_min}{The minimum allowable elevation. Useful if DEM source includes
ocean bathymetry as does the SRTM data from AWS. Default is \code{z_min = NULL},
but set to \code{0} for SRTM data. Ignored unless the tiles need to be generated from
the raw source files.}

\item{dir}{A filepath to the directory being used as the workspace. Default
is \code{tempdir()}, but unless the analyses will only be performed a few times 
it is highly recommended to define a permanent workspace.}

\item{...}{Additional agruments to pass to \code{\link[lbmech]{fix_z}}}
}
\description{
Import a raster for a specific region from a multisource environment, 
such as the outputs of the getMap function.
}
\examples{
# Generate a DEM, export it
n <- 5
dem <- expand.grid(list(x = 1:(n * 100),
                        y = 1:(n * 100))) / 100
dem <- as.data.table(dem)
dem[, z := 250 * exp(-(x - n/2)^2) + 
      250 * exp(-(y - n/2)^2)]
dem <- rast(dem)
ext(dem) <- c(10000, 20000, 30000, 40000)
crs(dem) <- "+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84"

dir <- tempdir()
writeRaster(dem, paste0(dir,"/DEM.tif"),overwrite=TRUE)


# Import raster, get the grid
dem <- rast(paste0(dir,"/DEM.tif"))
grid <- makeGrid(dem = dem, nx = n, ny = n, sources = TRUE)

# Import the map for the center tile resampled to a different resolution
dem2 <- importMap('SECTOR_13', grid, res = 20)
}
